{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "info": {
    "description": "",
    "version": "0.0.2",
    "title": "API for Rural Holidays backend"
  },
  "tags": [
    {
      "name": "listings",
      "description": "All listing-related endpoints"
    },
    {
      "name": "photos",
      "description": "Manipulation of the photos for a listing"
    },
    {
      "name": "users",
      "description": "Admin users"
    },
    {
      "name": "contacts",
      "description": "Clients  of the business"
    }
  ],
  "paths": {
    "/reset": {
      "post": {
        "tags": [
          "database"
        ],
        "summary": "Force reset of database to original structure.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/resample": {
      "post": {
        "tags": [
          "database"
        ],
        "summary": "Reload sample of data into reset database.",
        "responses": {
          "201": {
            "description": "Sample of data has been reloaded."
          },
          "400": {
            "description": "Bad request."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/listings": {
      "get": {
        "tags": [
          "listings"
        ],
        "summary": "View listings, sorted from most recent to least recent.",
        "parameters": [
          {
            "in": "query",
            "name": "startIndex",
            "description": "Number of items to skip before returning result",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of items to return",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "Search string for listing titles",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "category-id",
            "description": "ID for the category.",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "region-id",
            "description": "ID for the region.",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "host",
            "description": "Only return listings with this id as a host",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Return listings with a certain status. Can be 'all', 'active', 'expired' or 'upcoming'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listingsOverview"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "listings"
        ],
        "summary": "Create listing",
        "security": [
          {
            "User": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "title",
                  "rhCode",
                  "location",
                  "regionCode",
                  "hostId",
                  "categoryId",
                  "description",
                  "reservePrice"
                ],
                "allOf": [
                  {
                    "$ref": "#/components/schemas/categoryId"
                  },
                  {
                    "$ref": "#/components/schemas/title"
                  },
                  {
                    "$ref": "#/components/schemas/rhCode"
                  },
                  {
                    "$ref": "#/components/schemas/location"
                  },
                  {
                    "$ref": "#/components/schemas/regionCode"
                  },
                  {
                    "$ref": "#/components/schemas/hostId"
                  },
                  {
                    "$ref": "#/components/schemas/description"
                  },
                  {
                    "$ref": "#/components/schemas/reservePrice"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/listings/{id}": {
      "get": {
        "tags": [
          "listings"
        ],
        "summary": "View listing details",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "listing id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listingDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": [
          "listings"
        ],
        "summary": "Change some selected information for a listing",
        "description": "Only those properties included in the requestBody are to be changed.",
        "security": [
          {
            "User": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the listing to update",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/categoryId"
                  },
                  {
                    "$ref": "#/components/schemas/title"
                  },
                  {
                    "$ref": "#/components/schemas/description"
                  },
                  {
                    "$ref": "#/components/schemas/rhCode"
                  },
                  {
                    "$ref": "#/components/schemas/location"
                  },
                  {
                    "$ref": "#/components/schemas/regionCode"
                  },
                  {
                    "$ref": "#/components/schemas/listingExtras"
                  },
                  {
                    "$ref": "#/components/schemas/listingConfig"
                  },
                  {
                    "$ref": "#/components/schemas/reservePrice"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "listings"
        ],
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCategories"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/regions": {
      "get": {
        "tags": [
          "listings"
        ],
        "summary": "Get all regions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getRegions"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/listings/{id}/photos": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Id of the listing",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ],
      "get": {
        "tags": [
          "photos"
        ],
        "summary": "Get listing photo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "example": "Raw content of PNG image file"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "example": "Raw content of JPEG image file"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "post": {
        "tags": [
          "photos"
        ],
        "summary": "Add a photo to a listing",
        "security": [
          {
            "User": []
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "requestBody": {
          "content": {
            "image/png": {
              "schema": {
                "type": "string",
                "format": "binary",
                "example": "Raw content of PNG image file"
              }
            },
            "image/jpeg": {
              "schema": {
                "type": "string",
                "format": "binary",
                "example": "Raw content of JPEG image file"
              }
            }
          },
          "description": "Binary image (e.g., content of png or jpeg image file).",
          "required": true
        }
      },
      "delete": {
        "tags": [
          "photos"
        ],
        "summary": "Delete a photo to a listing",
        "security": [
          {
            "User": []
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/listings/{listing-id}/photos/{photo-id}": {
      "parameters": [
        {
          "in": "path",
          "name": "listing-id",
          "description": "Id of the listing",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        },
        {
          "in": "path",
          "name": "photo-id",
          "description": "Id of the photo",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ],
      "get": {
        "deprecated": true,
        "tags": [
          "photos"
        ],
        "summary": "Get listing photo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "put": {
        "deprecated": true,
        "tags": [
          "photos"
        ],
        "summary": "Update listing photo",
        "security": [
          {
            "User": []
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "content": {
            "image/png": {
              "schema": {
                "type": "string",
                "format": "binary",
                "example": "Raw content of PNG image file"
              }
            },
            "image/jpeg": {
              "schema": {
                "type": "string",
                "format": "binary",
                "example": "Raw content of JPEG image file"
              }
            }
          },
          "description": "Binary image (e.g., content of png or jpeg image file).",
          "required": true
        }
      },
      "delete": {
        "deprecated": true,
        "tags": [
          "photos"
        ],
        "summary": "Delete listing photo",
        "security": [
          {
            "User": []
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "contacts"
        ],
        "security": [
          {
            "User": []
          }
        ],
        "summary": "Searching users on their names, email or company",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "description": "Search string for names, email or company",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "tags": [
          "contacts"
        ],
        "security": [
          {
            "User": []
          }
        ],
        "summary": "Create contact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "familyName",
                  "givenName",
                  "company",
                  "email"
                ],
                "allOf": [
                  {
                    "properties": {
                      "givenName": {
                        "type": "string"
                      },
                      "familyName": {
                        "type": "string"
                      },
                      "company": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/email"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          },
          "400": {
            "description": "Malformed request"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Get contact by contact id",
        "security": [
          {
            "User": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "tags": [
          "contacts"
        ],
        "summary": "Change some selected information for a contact",
        "description": "Only those properties included in the requestBody are to be changed.",
        "security": [
          {
            "User": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "givenName": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "familyName": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "company": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/email"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create admin user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "familyName",
                  "givenName",
                  "email",
                  "password"
                ],
                "allOf": [
                  {
                    "properties": {
                      "givenName": {
                        "type": "string"
                      },
                      "familyName": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/email"
                  },
                  {
                    "$ref": "#/components/schemas/password"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          },
          "400": {
            "description": "Malformed request"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Log in user by username or email",
        "description": "Email and password are required",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/email/password supplied"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Logs out user session given by auth token in header",
        "security": [
          {
            "User": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "listingsOverview": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "id",
            "title"
          ],
          "description": "summary data for a listing",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                }
              }
            },
            {
              "$ref": "#/components/schemas/title"
            },
            {
              "$ref": "#/components/schemas/description"
            },
            {
              "$ref": "#/components/schemas/location"
            },
            {
              "$ref": "#/components/schemas/region"
            },
            {
              "$ref": "#/components/schemas/reservePrice"
            }
          ]
        }
      },
      "listingDetails": {
        "type": "object",
        "description": "detailed listing object",
        "required": [
          "id",
          "creationDateTime",
          "host"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/categoryId"
          },
          {
            "type": "object",
            "properties": {
              "categoryTitle": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/categoryId"
          },
          {
            "$ref": "#/components/schemas/title"
          },
          {
            "$ref": "#/components/schemas/rhCode"
          },
          {
            "$ref": "#/components/schemas/location"
          },
          {
            "$ref": "#/components/schemas/region"
          },
          {
            "$ref": "#/components/schemas/description"
          },
          {
            "$ref": "#/components/schemas/listingExtras"
          },
          {
            "$ref": "#/components/schemas/listingConfig"
          },
          {
            "type": "object",
            "properties": {
              "host": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "givenName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user": {
        "type": "object",
        "required": [
          "familyName",
          "givenName",
          "email",
          "password"
        ],
        "allOf": [
          {
            "type": "object",
            "properties": {
              "givenName": {
                "type": "string"
              },
              "familyName": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/email"
          },
          {
            "$ref": "#/components/schemas/password"
          }
        ]
      },
      "logInResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "the id of the logged in user"
          },
          "token": {
            "type": "string",
            "description": "a token to be used for future calls"
          }
        }
      },
      "photoUris": {
        "type": "array",
        "items": {
          "type": "string",
          "format": "uri"
        }
      },
      "photo": {
        "type": "object",
        "required": [
          "image",
          "type"
        ],
        "properties": {
          "image": {
            "type": "string",
            "format": "binary"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "id": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "categoryId": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "hostId": {
        "type": "object",
        "properties": {
          "hostId": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "title": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          }
        }
      },
      "rhCode": {
        "type": "object",
        "properties": {
          "rhCode": {
            "type": "string"
          }
        }
      },
      "location": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string"
          }
        }
      },
      "regionCode": {
        "type": "object",
        "properties": {
          "regionCode": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "region": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string"
          }
        }
      },
      "listingExtras": {
        "type": "object",
        "properties": {
          "listingExtras": {
            "type": "string"
          }
        }
      },
      "listingConfig": {
        "type": "object",
        "properties": {
          "listingConfig": {
            "type": "string"
          }
        }
      },
      "reservePrice": {
        "type": "object",
        "properties": {
          "reservePrice": {
            "type": "number"
          }
        }
      },
      "description": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "email": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "password": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "listing": {
        "title": "listing",
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "rhCode": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "regionCode": {
            "type": "integer"
          },
          "categoryId": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "reservePrice": {
            "type": "integer",
            "minimum": 0
          },
          "listingExtras": {
            "type": "string"
          },
          "listingConfig": {
            "type": "string"
          }
        }
      },
      "contact": {
        "title": "contact",
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "PostListing": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/listing"
          }
        ],
        "required": [
          "title",
          "rhCode",
          "location",
          "regionCode",
          "categoryId",
          "description",
          "reservePrice",
          "listingExtras",
          "listingConfig"
        ]
      },
      "PostContact": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/contact"
          }
        ],
        "required": [
          "givenName",
          "familyName",
          "company",
          "email",
          "password"
        ]
      },
      "LoginUser": {
        "title": "LoginUser",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "getCategories": {
        "title": "getCategories",
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "id",
            "title"
          ],
          "description": "summary data for a listing",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "categoryId": {
                  "type": "integer"
                },
                "categoryTitle": {
                  "type": "string"
                },
                "categoryDescription": {
                  "type": "string"
                }
              }
            }
          ]
        }
      },
      "getRegions": {
        "title": "getRegions",
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "id",
            "title"
          ],
          "description": "summary data for a listing",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "regionCode": {
                  "type": "integer"
                },
                "regionTitle": {
                  "type": "string"
                },
                "regionDescription": {
                  "type": "string"
                }
              }
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "User": {
        "type": "apiKey",
        "name": "X-Authorization",
        "in": "header"
      }
    }
  }
}